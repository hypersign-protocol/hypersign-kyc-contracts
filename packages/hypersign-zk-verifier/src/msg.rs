use cosmwasm_schema::cw_serde;
use schemars::JsonSchema;
use serde::{Deserialize, Serialize};
use strum_macros::ToString;

#[cw_serde]
#[derive(ToString)]
pub enum HypersignKYCProofTypes {
    // supported
    #[strum(serialize = "zkProofOfPersonhood")]
    zkProofOfPersonhood,

    #[strum(serialize = "zkProofOfKYC")]
    zkProofOfKYC,

    #[strum(serialize = "zkProofOfAge")]
    zkProofOfAge,

    #[strum(serialize = "zkProofOfMembership")]
    zkProofOfMembership,
}

impl HypersignKYCProofTypes {
    // Method to get color of the proof type
    pub fn get_color(&self) -> &'static str {
        match self {
            HypersignKYCProofTypes::zkProofOfAge => "#ffc300", // red
            HypersignKYCProofTypes::zkProofOfKYC => "#58c686", // green
            HypersignKYCProofTypes::zkProofOfPersonhood => "#bb7af5", // blue
            HypersignKYCProofTypes::zkProofOfMembership => "#9bf1f5",
        }
    }

    pub fn get_sbt_code(&self) -> &'static str {
        match self {
            HypersignKYCProofTypes::zkProofOfAge => "T1",
            HypersignKYCProofTypes::zkProofOfKYC => "T2",
            HypersignKYCProofTypes::zkProofOfPersonhood => "T3",
            HypersignKYCProofTypes::zkProofOfMembership => "",
        }
    }

    pub fn get_decription(&self) -> &'static str {
        match self {
            HypersignKYCProofTypes::zkProofOfAge => "Proves user is above or below certain age",
            HypersignKYCProofTypes::zkProofOfKYC => "Proves that user has finished his/her KYC",
            HypersignKYCProofTypes::zkProofOfPersonhood => "Proves that user is not a bot",
            HypersignKYCProofTypes::zkProofOfMembership => {
                "Proves that user is member of whitelisted countries"
            }
        }
    }

    // TODO: need to add logo urls here.
    pub fn get_logo(&self) -> &'static str {
        match self {
            HypersignKYCProofTypes::zkProofOfAge => "",
            HypersignKYCProofTypes::zkProofOfKYC => "",
            HypersignKYCProofTypes::zkProofOfPersonhood => "",
            HypersignKYCProofTypes::zkProofOfMembership => "",
        }
    }

    pub fn get_ver_key(&self) -> &'static str {
        match self {
            HypersignKYCProofTypes::zkProofOfAge => {
                r#"{"alpha_1":[45,77,154,167,227,2,217,223,65,116,157,85,7,148,157,5,219,234,51,251,177,108,100,59,34,245,153,162,190,109,242,226,20,190,221,80,60,55,206,176,97,216,236,96,32,159,227,69,206,137,131,10,25,35,3,1,240,118,202,255,0,77,25,38],"beta_2":[9,103,3,47,203,247,118,209,175,201,133,248,136,119,241,130,211,132,128,166,83,242,222,202,169,121,76,188,59,243,6,12,14,24,120,71,173,76,121,131,116,208,214,115,43,245,1,132,125,214,139,192,224,113,36,30,2,19,188,127,193,61,183,171,48,76,251,209,224,138,112,74,153,245,232,71,217,63,140,60,170,253,222,196,107,122,13,55,157,166,154,77,17,35,70,167,23,57,193,177,164,87,168,199,49,49,35,210,77,47,145,146,248,150,183,198,62,234,5,169,213,127,6,84,122,208,206,200],"gamma_2":[25,142,147,147,146,13,72,58,114,96,191,183,49,251,93,37,241,170,73,51,53,169,231,18,151,228,133,183,174,243,18,194,24,0,222,239,18,31,30,118,66,106,0,102,94,92,68,121,103,67,34,212,247,94,218,221,70,222,189,92,217,146,246,237,9,6,137,208,88,95,240,117,236,158,153,173,105,12,51,149,188,75,49,51,112,179,142,243,85,172,218,220,209,34,151,91,18,200,94,165,219,140,109,235,74,171,113,128,141,203,64,143,227,209,231,105,12,67,211,123,76,230,204,1,102,250,125,170],"delta_2":[20,211,179,226,114,2,50,214,132,106,238,190,5,10,195,87,148,1,243,112,52,123,128,6,61,31,34,74,113,104,114,63,5,200,157,23,121,108,110,73,77,12,97,106,43,42,135,125,252,186,199,9,41,15,8,190,205,235,147,42,46,249,201,240,40,12,215,135,150,3,221,132,94,40,176,113,43,22,159,185,139,78,40,92,185,188,27,135,109,201,16,206,92,121,56,238,48,11,176,96,31,92,101,40,56,155,8,16,103,224,41,73,182,160,110,253,62,210,165,206,10,219,3,220,123,23,221,237],"ic":[[42,33,163,159,222,161,233,222,248,169,188,190,69,235,141,12,246,82,7,50,162,136,98,132,218,190,29,201,124,8,19,49,10,178,23,224,100,114,117,133,186,175,131,24,255,2,124,248,157,6,196,133,161,219,46,73,163,31,151,223,32,73,216,252],[45,63,50,160,97,149,246,86,252,3,171,170,153,74,55,233,48,135,88,109,1,148,30,89,12,2,93,142,123,224,241,73,16,71,218,16,226,145,231,211,203,237,224,123,126,207,98,109,254,92,208,189,39,223,219,90,95,232,35,181,176,142,232,101],[27,128,195,136,138,202,223,60,190,234,76,93,121,92,0,146,180,156,42,129,18,194,131,140,193,133,212,177,223,0,178,51,30,165,183,190,95,76,201,46,50,229,208,240,32,186,237,144,100,178,183,11,79,230,186,183,67,72,97,118,225,126,146,22],[39,70,2,179,73,161,105,212,35,115,134,76,208,72,79,238,168,56,53,141,56,42,47,22,11,169,132,27,210,249,168,105,6,13,171,30,3,230,32,38,87,158,154,100,249,129,65,251,228,177,133,52,248,85,13,242,254,47,122,219,154,31,107,136],[43,66,135,84,198,238,72,32,35,110,105,77,106,122,123,80,33,127,236,135,137,224,18,202,189,159,131,15,92,201,54,165,31,156,114,27,254,30,230,3,165,42,245,137,113,21,103,29,145,114,230,198,248,40,120,165,187,242,99,114,158,77,197,67],[14,127,0,93,155,228,124,26,217,128,211,201,109,92,165,244,84,38,59,136,212,151,222,121,219,108,233,214,81,63,57,171,47,182,192,160,136,234,183,72,90,161,120,25,181,168,53,2,86,21,57,211,117,109,71,7,248,195,100,96,248,116,198,67],[11,213,253,166,197,119,32,89,246,171,23,216,151,83,50,203,94,80,153,104,108,15,210,232,117,220,151,53,87,132,133,37,39,102,196,176,1,30,180,60,135,7,42,90,250,7,91,242,140,248,2,251,179,124,251,167,223,91,88,55,241,188,179,128]]}"#
            }
            HypersignKYCProofTypes::zkProofOfKYC => {
                r#"{"alpha_1":[45,77,154,167,227,2,217,223,65,116,157,85,7,148,157,5,219,234,51,251,177,108,100,59,34,245,153,162,190,109,242,226,20,190,221,80,60,55,206,176,97,216,236,96,32,159,227,69,206,137,131,10,25,35,3,1,240,118,202,255,0,77,25,38],"beta_2":[9,103,3,47,203,247,118,209,175,201,133,248,136,119,241,130,211,132,128,166,83,242,222,202,169,121,76,188,59,243,6,12,14,24,120,71,173,76,121,131,116,208,214,115,43,245,1,132,125,214,139,192,224,113,36,30,2,19,188,127,193,61,183,171,48,76,251,209,224,138,112,74,153,245,232,71,217,63,140,60,170,253,222,196,107,122,13,55,157,166,154,77,17,35,70,167,23,57,193,177,164,87,168,199,49,49,35,210,77,47,145,146,248,150,183,198,62,234,5,169,213,127,6,84,122,208,206,200],"gamma_2":[25,142,147,147,146,13,72,58,114,96,191,183,49,251,93,37,241,170,73,51,53,169,231,18,151,228,133,183,174,243,18,194,24,0,222,239,18,31,30,118,66,106,0,102,94,92,68,121,103,67,34,212,247,94,218,221,70,222,189,92,217,146,246,237,9,6,137,208,88,95,240,117,236,158,153,173,105,12,51,149,188,75,49,51,112,179,142,243,85,172,218,220,209,34,151,91,18,200,94,165,219,140,109,235,74,171,113,128,141,203,64,143,227,209,231,105,12,67,211,123,76,230,204,1,102,250,125,170],"delta_2":[23,108,79,8,115,229,17,157,166,207,3,198,146,64,19,0,250,236,75,7,219,228,32,173,68,247,47,253,191,101,22,212,42,46,201,89,56,204,29,165,133,44,230,70,180,173,56,176,70,218,148,17,108,218,49,226,79,142,29,157,61,7,154,36,43,144,95,125,120,223,71,140,96,32,169,70,8,126,167,59,240,72,205,56,244,14,193,227,12,213,169,219,93,253,74,183,4,62,170,243,214,100,245,13,21,122,71,153,238,86,26,212,37,207,238,172,8,195,185,197,195,141,71,0,124,162,101,63],"ic":[[29,58,9,70,74,248,17,166,123,120,46,19,152,230,181,119,90,101,111,5,169,159,181,19,149,9,31,210,75,215,255,161,47,100,76,219,245,0,214,234,35,37,94,124,230,231,185,82,26,223,219,125,144,60,164,177,5,123,106,131,232,223,48,48],[6,104,118,63,148,197,115,11,36,245,205,131,56,144,103,125,183,7,99,69,129,28,233,144,220,27,57,84,14,8,44,22,5,182,195,211,161,171,216,82,53,249,34,223,202,5,81,224,216,197,127,140,139,192,221,200,98,183,151,190,255,244,253,233],[25,217,147,36,65,202,83,125,122,160,244,158,78,152,138,2,33,240,3,22,72,12,232,50,30,24,147,147,80,11,224,143,0,79,186,113,115,140,162,247,161,141,96,242,248,193,186,103,236,123,45,4,15,8,175,162,227,25,217,74,103,68,109,210],[24,131,203,70,39,87,2,176,226,236,20,119,178,9,0,80,231,115,63,175,105,96,206,81,96,120,61,132,178,228,230,187,3,165,190,144,86,111,82,166,230,252,8,59,28,111,109,157,52,163,135,184,112,216,59,248,108,115,81,22,65,242,198,227],[22,235,174,120,1,159,216,217,83,82,145,199,21,45,25,172,224,229,31,63,253,248,164,120,191,166,134,190,169,126,81,141,15,102,51,13,64,94,72,133,155,239,112,118,126,44,89,246,164,75,247,224,83,228,39,191,22,151,186,99,3,72,174,20]]}"#
            }
            HypersignKYCProofTypes::zkProofOfPersonhood => {
                r#"{"alpha_1":[45,77,154,167,227,2,217,223,65,116,157,85,7,148,157,5,219,234,51,251,177,108,100,59,34,245,153,162,190,109,242,226,20,190,221,80,60,55,206,176,97,216,236,96,32,159,227,69,206,137,131,10,25,35,3,1,240,118,202,255,0,77,25,38],"beta_2":[9,103,3,47,203,247,118,209,175,201,133,248,136,119,241,130,211,132,128,166,83,242,222,202,169,121,76,188,59,243,6,12,14,24,120,71,173,76,121,131,116,208,214,115,43,245,1,132,125,214,139,192,224,113,36,30,2,19,188,127,193,61,183,171,48,76,251,209,224,138,112,74,153,245,232,71,217,63,140,60,170,253,222,196,107,122,13,55,157,166,154,77,17,35,70,167,23,57,193,177,164,87,168,199,49,49,35,210,77,47,145,146,248,150,183,198,62,234,5,169,213,127,6,84,122,208,206,200],"gamma_2":[25,142,147,147,146,13,72,58,114,96,191,183,49,251,93,37,241,170,73,51,53,169,231,18,151,228,133,183,174,243,18,194,24,0,222,239,18,31,30,118,66,106,0,102,94,92,68,121,103,67,34,212,247,94,218,221,70,222,189,92,217,146,246,237,9,6,137,208,88,95,240,117,236,158,153,173,105,12,51,149,188,75,49,51,112,179,142,243,85,172,218,220,209,34,151,91,18,200,94,165,219,140,109,235,74,171,113,128,141,203,64,143,227,209,231,105,12,67,211,123,76,230,204,1,102,250,125,170],"delta_2":[25,144,189,121,149,250,132,157,232,35,32,125,179,179,234,138,201,200,223,166,41,8,239,185,20,249,87,195,46,147,44,206,2,125,144,112,132,199,1,156,61,188,153,48,199,231,224,248,213,150,170,59,16,40,131,23,78,50,37,19,32,230,21,129,35,17,147,23,101,57,130,23,1,240,30,63,16,113,214,15,188,101,240,95,205,11,28,114,74,140,205,2,51,20,169,133,17,59,160,45,102,3,145,206,218,106,126,10,182,84,254,153,236,55,247,139,217,88,179,99,218,155,45,221,14,8,95,251],"ic":[[29,58,9,70,74,248,17,166,123,120,46,19,152,230,181,119,90,101,111,5,169,159,181,19,149,9,31,210,75,215,255,161,47,100,76,219,245,0,214,234,35,37,94,124,230,231,185,82,26,223,219,125,144,60,164,177,5,123,106,131,232,223,48,48],[6,104,118,63,148,197,115,11,36,245,205,131,56,144,103,125,183,7,99,69,129,28,233,144,220,27,57,84,14,8,44,22,5,182,195,211,161,171,216,82,53,249,34,223,202,5,81,224,216,197,127,140,139,192,221,200,98,183,151,190,255,244,253,233],[25,217,147,36,65,202,83,125,122,160,244,158,78,152,138,2,33,240,3,22,72,12,232,50,30,24,147,147,80,11,224,143,0,79,186,113,115,140,162,247,161,141,96,242,248,193,186,103,236,123,45,4,15,8,175,162,227,25,217,74,103,68,109,210],[24,131,203,70,39,87,2,176,226,236,20,119,178,9,0,80,231,115,63,175,105,96,206,81,96,120,61,132,178,228,230,187,3,165,190,144,86,111,82,166,230,252,8,59,28,111,109,157,52,163,135,184,112,216,59,248,108,115,81,22,65,242,198,227],[22,235,174,120,1,159,216,217,83,82,145,199,21,45,25,172,224,229,31,63,253,248,164,120,191,166,134,190,169,126,81,141,15,102,51,13,64,94,72,133,155,239,112,118,126,44,89,246,164,75,247,224,83,228,39,191,22,151,186,99,3,72,174,20]]}"#
            }
            HypersignKYCProofTypes::zkProofOfMembership => {
                r#"{"alpha_1":[45,77,154,167,227,2,217,223,65,116,157,85,7,148,157,5,219,234,51,251,177,108,100,59,34,245,153,162,190,109,242,226,20,190,221,80,60,55,206,176,97,216,236,96,32,159,227,69,206,137,131,10,25,35,3,1,240,118,202,255,0,77,25,38],"beta_2":[9,103,3,47,203,247,118,209,175,201,133,248,136,119,241,130,211,132,128,166,83,242,222,202,169,121,76,188,59,243,6,12,14,24,120,71,173,76,121,131,116,208,214,115,43,245,1,132,125,214,139,192,224,113,36,30,2,19,188,127,193,61,183,171,48,76,251,209,224,138,112,74,153,245,232,71,217,63,140,60,170,253,222,196,107,122,13,55,157,166,154,77,17,35,70,167,23,57,193,177,164,87,168,199,49,49,35,210,77,47,145,146,248,150,183,198,62,234,5,169,213,127,6,84,122,208,206,200],"gamma_2":[25,142,147,147,146,13,72,58,114,96,191,183,49,251,93,37,241,170,73,51,53,169,231,18,151,228,133,183,174,243,18,194,24,0,222,239,18,31,30,118,66,106,0,102,94,92,68,121,103,67,34,212,247,94,218,221,70,222,189,92,217,146,246,237,9,6,137,208,88,95,240,117,236,158,153,173,105,12,51,149,188,75,49,51,112,179,142,243,85,172,218,220,209,34,151,91,18,200,94,165,219,140,109,235,74,171,113,128,141,203,64,143,227,209,231,105,12,67,211,123,76,230,204,1,102,250,125,170],"delta_2":[41,135,4,63,98,250,132,151,104,202,254,180,248,206,192,80,170,138,23,77,28,221,91,225,109,62,162,20,134,247,64,70,4,163,64,127,213,82,19,44,3,74,102,18,72,189,254,50,75,42,199,18,47,248,59,120,168,137,105,99,145,185,4,90,41,114,128,23,8,79,48,57,1,236,125,243,239,64,36,84,50,75,40,121,148,158,30,137,167,212,218,172,234,246,242,161,6,70,149,15,83,220,46,40,91,224,218,21,56,13,18,235,68,147,55,29,103,245,214,132,79,238,179,241,252,208,54,217],"ic":[[29,233,8,39,173,201,59,72,135,1,77,111,114,116,89,22,80,142,178,28,8,98,253,0,19,92,218,22,48,9,246,227,14,14,233,174,127,112,49,61,1,175,168,103,46,10,71,184,160,103,218,210,153,13,220,193,88,180,68,136,171,201,106,79],[9,63,71,71,138,9,168,184,196,46,34,9,193,89,233,250,239,122,28,157,195,249,212,54,70,209,105,219,52,72,158,9,18,193,191,61,204,122,208,156,58,210,183,233,31,252,20,60,223,134,212,101,198,189,195,22,62,19,99,138,151,159,132,101],[14,67,221,54,179,204,204,42,249,84,19,63,51,105,146,176,236,149,55,25,218,44,146,117,28,145,13,112,143,121,148,26,22,29,122,88,172,212,23,62,145,169,140,99,49,239,198,223,16,248,86,44,34,132,230,192,20,76,203,112,204,208,247,197],[48,58,132,9,91,58,178,62,182,71,217,113,104,222,183,227,139,149,62,43,121,13,142,230,79,101,72,237,191,41,56,133,24,1,81,138,226,127,197,254,179,32,170,69,1,6,138,148,181,93,235,194,217,14,234,209,59,85,38,181,190,13,206,205],[5,95,245,17,77,34,95,159,148,137,58,105,234,69,237,42,107,206,96,120,88,206,236,76,142,71,79,89,246,56,36,38,29,197,106,34,205,196,40,55,66,3,14,232,153,139,139,13,102,234,112,100,196,109,219,78,51,74,109,238,187,11,88,170],[23,43,66,145,41,42,61,14,101,219,139,5,34,138,97,146,121,68,162,47,195,216,131,65,148,18,139,105,16,115,225,45,13,34,118,64,200,24,170,60,88,184,111,13,245,232,234,112,180,177,173,147,75,31,160,232,17,48,87,241,67,116,112,140]]}"#
            }
        }
    }
}

#[cw_serde]
#[derive(ToString)]
pub enum HsZkProtocols {
    #[strum(serialize = "groth16")]
    groth16,
}

#[cw_serde]
#[derive(ToString)]
pub enum HsZkProtocolsCurvs {
    #[strum(serialize = "bn128")]
    bn128,
}

#[cw_serde]
pub struct HsZkProof {
    pub pi_a: Vec<u8>,
    pub pi_b: Vec<u8>,
    pub pi_c: Vec<u8>,
    pub protocol: HsZkProtocols,
    pub curve: HsZkProtocolsCurvs,
}

#[cw_serde]
pub struct ZkProof {
    pub proof: HsZkProof,
    pub public_signales: Vec<String>,
    pub proof_type: HypersignKYCProofTypes,
}

#[cw_serde]
pub struct HypersignKYCProof {
    pub credential_id: Option<String>, // verifiable credential id linked with this proof
    pub zk_proof: ZkProof,
}
